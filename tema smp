include 'emu8086.inc'  

;Programul permite desnarea a doua corpuri geometrice (cub si paralelipiped) 
;Contine: 2 alerte, puse atunci cand s-au terminat de desenat corpurile 
;Un meniu de selectie pentru a alege care dintre cele 2 corpuri vor fi desenate
;Introducerea valorilor pentru desen de la tastatura

;Program realizat de Radoi Andreea Alexandra
;Grupa:331AB


;Meniul de selectie
;permite alegerea corpului geometric ce urmeaza a fi desenat  

start:  
;PTHIS este functia care printeaza pe ecran
;scan_num este functia care ia de la tastatura valoarea
    call PTHIS   
        DB 13,10, 'Alegeti forma geometrica: ', 0   
    putc 13
    call PTHIS
        DB 13,10, '1. Cub',0
    putc 13
    call PTHIS
        DB 13,10, '2. Paralelipiped', 0
    putc 13
    call PTHIS
        DB 13,10, 'Optiune: ', 0
    call scan_num

;compara valoarea data de la tastatura cu optiunile posibile
;pentru a stabili ce corp sa deseneze
    cmp cx, 1
    je cub
        
    cmp cx,2
    je paralelipiped


;programul de desen al cubului
;permite desenarea inclusiv a liniilor care nu se vad (pe acestea le face punctat)
cub: 
    putc 13
    call PTHIS
        DB 13,10, 'Introduceti lungimea laturii: ',0 ;se alege valoarea lui l
    call scan_num   
    
    l dw ?  
    h dw ? 
    
    mov l,cx          ;valoarea data de la tastatura este memorata in l
    mov ax, l
    mov dl, 2
    div dl
    mov ah, 0
    mov h, ax         ;h se ia din ax

    code: mov ah, 0
          mov al, 12h ; trecere in mod grafic 720x400
          int 10h   
 
 ; afisare latura superioara
          mov cx, 100
          add cx, l   ;adunam pentru a desena pe l coloane pornind din pozitia 100
          mov dx, 100 ;rand
          mov al, 7   ;gri
      u1: mov ah, 0ch ; afisare pixel 
          int 10h
          dec cx   ;decrementam cx, pentru a parcurge coloanele si a colora pixelii         
          cmp cx, 100 ;se compara cx cu 100 care este coloana de orpire a liniei
          jae u1         
          
 ; afisare latura inferioare
          mov cx, 100
          add cx, l  ;adunam l pentru a desena pe l coloane pornind din pozitia 100
          mov dx, 100
          add dx, l  ;adunam l la valoarea randului pentru a cobora punctul de inceput al desenului
          mov al, 9  ;
      u2: mov ah, 0ch;afisare pixel
          int 10h
          dec cx     ;decrementare cx, pentru parcurgere coloana
          cmp cx, 100;comparare cu 100 pentru a stabili cand se termina linia
          ja u2   
          
 ; latura din stanga
          mov cx, 100 ;desenam pe o singura coloana
          mov dx, 100 ;parcurgem pe randuri pixelii
          add dx, l   ;pentru asta adunam valoarea data de noi de la tastatura la pozitia de inceput
          mov al, 5   ;roz  
      u3: mov ah, 0ch ;afisare pixel
          int 10h
          dec dx      ;se decrementeaza dx-ul pentru a parcurge toate randurile
          cmp dx, 100 ;se compara cu 100,care este pozitia de stop
          ja u3    
          
 ; latura din dreapta
          mov cx, 100;desenam pe o singura coloana
          add cx, l  ;dar mutam coloana la dreapta cu l pentru a inchide patratul
          mov dx, 100;parcurgerea liniei se face pe randuri
          add dx, l  ;adunam l pentru a desena pe l randuri pornind din pozitia 100
          mov al, 10 ;verde deschis
      u4: mov ah, 0ch;afisare pixel
          int 10h
          dec dx     ;decrementarea dx-ului pentru a parcurge toate randurile 
          cmp dx, 100;se compara cu 100, care este pozitia de stop
          ja u4
 
; latura spate-sus-stanga
          mov cx, 100
          mov dx, 100
          mov bx, 100
          add bx, h  ;pentru a gasi punctul de oprire al liniei, e folosit la comparatie acest registru
          mov al, 15
      u5: mov ah, 0ch;afisare pixel
          int 10h
          dec dx     ;
          inc cx     ;incrementare cx pentru a se muta pe coloane
          cmp cx, bx ;compara pana gaseste punctul de stop
          jl u5
 
; latura spate-sus-dreapta
          mov cx, 100
          add cx, l  ;adunam latimea pentru a ne muta pe coloana  spre dreapta
          mov dx, 100 
          mov bx, cx
          add bx, h  ;pentru a gasi punctul de oprire al liniei
          mov al, 15
      u6: mov ah, 0ch
          int 10h
          inc cx     ;incrementam cx pentru a ne muta pe coloana  
          dec dx     ;decrementam dx pentru a ne muta pe rand
          cmp cx, bx ;comparam cu bx pentru a vedea daca am parcurs suficiente coloane
          jl u6

; latura sus-fata vazuta de sus 
          mov cx ,100
          add cx, h  ;adunam pentru a stabili de unde incepem cu numaratul coloanelor pe care desenam
          mov dx, 100
          sub dx, h  ;adunam pentru a stabili pe ce rand incepem sa desenam; randul se va pastra
          mov bx , cx
          add bx, l  ;acesta e punctul final al liniei
          mov al, 15
      u7: mov ah, 0ch
          int 10h
          inc cx     ;incrementam cu cate un pixel
          cmp cx, bx ;comparam pentru a sti daca am ajuns la final
          jl u7  

;latura jos-fata vazuta din dreapta cubului
          mov cx ,100
          add cx, l  ;stabilim pozitia pe coloana
          mov dx, 100
          add dx, l  ;stabilim pozitia pe rand
          mov bx, cx
          add bx, h  ;valoare de stop pentru comparatie
          mov al, 15
      u8: mov ah, 0ch
          int 10h
          dec dx     ;coboram pe randuri
          inc cx     ;urcam pe coloane
          cmp cx, bx ;comparam cu punctul de stop
          jl u8

;latura spate -fata fazuta din dreapta cubului
          mov cx ,100
          add cx, l
          add cx, h  ;stabilim pozitia pe coloana
          mov dx, 100
          sub dx, h  ;stabilim pozitia pe randuri
          mov bx, 100
          add bx, h  ;valoarea punctului de stop
          mov al, 15
      u9: mov ah, 0ch
          int 10h
          inc dx     ;urcam pe randuri
          cmp dx, bx ;comparam cu punctul de stop
          jl u9   

;cele 3 laturi care urmeaza sunt simetricele a 3 laturi
;ele fiind in zona care nu se vede din cub vor aparea punctate    

;simetrica latura jos fata vazuta din dreapta cubului 
          mov cx,100 ;coloana ramane cea initiala
          mov dx,100
          add dx,l   ;ne mutam pe rand cu punctul de pornire
          mov bx,100
          add bx,h   ;punctul de comparatie 
          mov al,15
      u10:mov ah,0ch
          int 10h
          dec dx     ;decrementam randul de 5 ori si abia apoi afisam un pixel
          inc cx     ;incrementam coloana de 5 ori si abia apoi afisam un pixel
          dec dx
          inc cx
          dec dx
          inc cx
          dec dx
          inc cx
          dec dx
          inc cx
          cmp cx,bx  ;comparam cu valoare de stop
          jl u10 

;simetrica latura sus-fata vazuta de sus
          mov cx,100
          add cx,l
          add cx,h   ;ne mutam pe coloana
          mov dx,100 
          add dx,h   ;ne mutam pe rand
          mov bx,cx
          sub bx,l
          mov al,15
      u11:mov ah,0ch
          int 10h
          dec cx     ;decrementam coloane de 5 ori si abia apoi afisam un pixel
          dec cx
          dec cx
          dec cx
          dec cx
          cmp cx,bx ;comparam cu punctul de stop
          ja u11

;simetrica latura spate-fata vazuta din dreapta cubului
          mov cx ,100
          add cx,h  ;ne mutam pe coloana
          mov dx,100
          add dx,h  ;ne mutam pe rand
          mov bx,100
          sub bx,h  ;punctul de stop
          mov al,15
      u12:mov ah,0ch
          int 10h
          dec dx    ;decrementam dx de 5 ori si abia apoi afisam un pixel
          dec dx
          dec dx
          dec dx
          dec dx
          cmp dx,bx ;comparatie pentru a vedea daca s-a ajuns la punctul de stop
          ja u12
  

;alerta 
;atunci cand s-a terminat de desenat cubul
;o sa auzim 3 semnale sonore
          ;1
          mov ah, 02
          mov dx, 07h
          int 21h
          ;2                   
          mov ah, 02
          mov dx, 07h
          int 21h 
          ;3
          mov ah, 02
          mov dx, 07h
          int 21h

;sare la macro-ul final
          jmp final
          
;Programul de desen al paralelipipedului 
;deseneaza si liniile care nu se vad (punctat)

paralelipiped: 
    putc 13
    call PTHIS
        DB 13,10, 'Introduceti valoarea lungimii : ',0
    call scan_num ;scriem valoarea dorita 

    Lu dw ? 
    mov Lu,cx     ;o luam din registru si o punem in variabila folosita
      
    call PTHIS
        DB 13,10, 'Introduceti valoarea latimii : ',0
    call scan_num ;scriem valoarea dorita

    la dw ?
    mov la,cx     ;o luam din registru si o punem in variabila folosita

    call PTHIS
        DB 13,10, 'Introduceti valoarea inaltimii: ',0  
    call scan_num ;scriam valoarea dorita
    
    i dw ?   
    mov i,cx      ;o luam din registru si o punem in variabila folosita


    mov ax, l
    mov dl, 2
    div dl
    mov ah, 0
    mov h, ax

    code1: mov ah, 0
           mov al, 13h ; trecere in mod grafic 320x200
           int 10h  

;modul de calculare al pozitiilor de incepere a liniilor este asemanator cu cel de la cub
;dar se tine cont ca paralelipipedul are inaltime, latime si lungime           
; afisare latura superioara
           mov cx, 100
           add cx, Lu  ; coloana
           mov dx, 100 ; rand
           mov al, 15  ; alb
       p1: mov ah, 0ch ; afisare pixel
           int 10h
           dec cx
           cmp cx, 100
           jae p1     
           
; afisare latura inferioare
           mov cx, 100
           add cx, Lu  ;coloana de ranceput
           mov dx, 100 
           add dx,i    ;randul de inceput
           mov al, 15
       p2: mov ah, 0ch
           int 10h
           dec cx      ;se decrementeaza coloana
           cmp cx, 100
           ja p2  
           
; latura din stanga
;se pastreaza modul de calcul de la cub
;se aduca inaltimea la valoarea randului
;se realizeaza parcurgerea pe rand
           mov cx, 100
           mov dx, 100
           add dx,i
           mov al, 15
       p3: mov ah, 0ch
           int 10h
           dec dx
           cmp dx, 100
           ja p3  
           
; latura din dreapta 
;se pastreaza modul de calcul de la cub
;se adula lungimea la coloana si inaltimea la rand 
;se realizeaza parcurgerea pe rand
           mov cx, 100
           add cx, Lu
           mov dx, 100
           add dx, i
           mov al, 15
       p4: mov ah, 0ch
           int 10h
           dec dx
           cmp dx, 100
           ja p4
 
; latura fata vazuta de sus -spate
;la fel ca la cub dar se aduna valoarea latimii la valoarea de comparatie
;decrementam randul
;incrementam coloana
           mov cx, 100
           mov dx, 100
           mov bx, 100
           add bx, la
           mov al, 15
       p5: mov ah, 0ch
           int 10h
           dec dx
           inc cx
           cmp cx, bx
           jl p5
 
; latura fata vazuta de sus dreapta 
          mov cx, 100
          add cx, Lu
          mov dx, 100 
          mov bx, cx
          add bx, la
          mov al, 15
      p6: mov ah, 0ch
          int 10h
          inc cx
          dec dx
          cmp cx, bx
          jl p6

;latura sus -fata vazuta de sus
          mov cx ,100
          add cx,la
          mov dx, 100 
          sub dx,la
          mov bx , cx
          add bx, Lu
          mov al, 15
      p7: mov ah, 0ch
          int 10h
          inc cx
          cmp cx, bx
          jl p7  

;latura fata vazuta din dreapta jos
          mov cx ,100
          add cx, Lu
          mov dx, 100
          add dx, i    
          mov bx, cx
          add bx, la
          mov al, 15
      p8: mov ah, 0ch
          int 10h
          dec dx
          inc cx
          cmp cx, bx
          jl p8

;latura dreapta- fata vazuta din dreapta
          mov cx ,100
          add cx, la
          add cx, Lu
          mov dx, 100
          sub dx, la
          add dx,i
          mov bx, dx
          sub bx, i
          mov al, 15
      p9: mov ah, 0ch
          int 10h
          dec dx
          cmp dx, bx
          ja p9    

;latura punctata simetrica latura jos fata vazuta din dreapta
          mov cx,100
          mov dx,100
          add dx,i
          mov bx,100
          add bx,la
          mov al,15
      p10:mov ah,0ch
          int 10h
          dec dx
          inc cx
          dec dx
          inc cx
          dec dx
          inc cx
          dec dx
          inc cx
          dec dx
          inc cx
          cmp cx,bx 
          jl p10

;latura punctata simetrica  latura spate fata vazuta de sus
          mov cx,100
          add cx,la
          mov dx,100  
          add dx,i 
          sub dx,la
          mov bx,cx
          add bx,Lu
          mov al,15
      p11:mov ah,0ch
          int 10h
          inc cx
          inc cx
          inc cx
          inc cx
          inc cx
          cmp cx,bx
          jl p11

;latura puncata simetrica latura spate fata vazuta din dreapta

          mov cx,100
          add cx,la
          mov dx,100  
          add dx,i
          sub dx,la
          mov bx,dx
          sub bx,i
          mov al,15
      p12:mov ah,0ch
          int 10h
          dec dx
          dec dx
          dec dx
          dec dx
          dec dx
          cmp dx,bx
          ja p12   

;alerta   
          ;1
          mov ah, 02
          mov dx, 07h
          int 21h 
          ;2                  
          mov ah, 02
          mov dx, 07h
          int 21h
          ;3
          mov ah, 02
          mov dx, 07h
          int 21h 
          
          jmp final
 

; asteptare apasare tasta  
    final:
           mov ah, 00
           int 16h
           mov ah,00h 
           int 10h

;reluare program  
jmp start

HLT
DEFINE_SCAN_NUM
DEFINE_PRINT_NUM
DEFINE_PRINT_NUM_UNS
DEFINE_PTHIS
